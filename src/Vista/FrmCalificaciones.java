/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import static Aplicacion.EstudiantesCSVInicio.listaAlumnos;
import Modelo.Excepciones.EntradaInvalidaExcepcion;
import Modelo.TbCalifs;
import com.qoppa.pdfWriter.PDFDocument;
import com.qoppa.pdfWriter.PDFPage;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.awt.print.PageFormat;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenin
 */
public class FrmCalificaciones extends javax.swing.JFrame {
    public TbCalifs modelo = new TbCalifs();
    /**
     * Creates new form FrmCalificaciones
     */
    public FrmCalificaciones() {
        initComponents();
        iniciaTabla();
    }
    public void iniciaTabla(){
        modelo.inicializaTabla(tblCalifs);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCalifs = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnCSV = new javax.swing.JButton();
        btnPDF = new javax.swing.JButton();
        lbFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 100));
        setMinimumSize(new java.awt.Dimension(580, 550));
        setResizable(false);
        setSize(new java.awt.Dimension(580, 550));
        getContentPane().setLayout(null);

        tblCalifs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCalifs);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 150, 480, 280);

        btnGuardar.setBorder(null);
        btnGuardar.setBorderPainted(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar);
        btnGuardar.setBounds(50, 460, 140, 40);

        btnCSV.setBorder(null);
        btnCSV.setBorderPainted(false);
        btnCSV.setContentAreaFilled(false);
        btnCSV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCSVActionPerformed(evt);
            }
        });
        getContentPane().add(btnCSV);
        btnCSV.setBounds(220, 460, 140, 40);

        btnPDF.setBorder(null);
        btnPDF.setBorderPainted(false);
        btnPDF.setContentAreaFilled(false);
        btnPDF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFActionPerformed(evt);
            }
        });
        getContentPane().add(btnPDF);
        btnPDF.setBounds(390, 460, 140, 40);

        lbFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/FrmCalificaciones.png"))); // NOI18N
        getContentPane().add(lbFondo);
        lbFondo.setBounds(0, 0, 580, 550);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        String calif;
        int flag = 0;
        ArrayList<Double> califTemp = new ArrayList<Double>();
        DefaultTableModel tb = (DefaultTableModel) tblCalifs.getModel();
            for(int i = 0; i < this.tblCalifs.getRowCount();i++){
                calif = String.valueOf(tb.getValueAt(i,3));
                try{
                    if(Double.parseDouble(calif)<0 || Double.parseDouble(calif)>100)
                        throw new EntradaInvalidaExcepcion("Debe ingresar un número positivo como calificación");
                }catch(NumberFormatException e1){
                    calif = "0";
                }catch(EntradaInvalidaExcepcion e2){
                    flag = 1;
                    JOptionPane.showMessageDialog(rootPane, e2.getMessage());
                }
                califTemp.add(Double.parseDouble(calif));
            }
            if(flag == 0){
                for(int i = 0; i < califTemp.size();i++)
                    listaAlumnos.get(i).setCalif(califTemp.get(i));
                JOptionPane.showMessageDialog(rootPane, "Las calificaciones han sido registradas");
            }
            /*for(int i = 0; i < this.tblCalifs.getRowCount();i++)
                System.out.println("calif "+ i + " es: " + listaAlumnos.get(i).getCalif());*/
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCSVActionPerformed
        // TODO add your handling code here:
        try{
            FileWriter nuevoCSV = new FileWriter("src\\califs.csv");
            PrintWriter escribir = new PrintWriter(nuevoCSV);
            for (int i = 0; i < listaAlumnos.size(); i++){
                if(listaAlumnos.get(i).getCalif()==0)
                    escribir.println(listaAlumnos.get(i).getMatricula() + "," + listaAlumnos.get(i).getAsignatura() + "," + "S/C");
                else
                    escribir.println(listaAlumnos.get(i).getMatricula() + "," + listaAlumnos.get(i).getAsignatura() + "," + listaAlumnos.get(i).getCalif());
            }
            nuevoCSV.close();
            JOptionPane.showMessageDialog(rootPane, "Se ha generado el archivo CSV con las calificaciones");
        }catch(IOException e1){
            JOptionPane.showMessageDialog(rootPane, "Problemas con la creación del archivo de salida");
        }
    }//GEN-LAST:event_btnCSVActionPerformed

    private void btnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFActionPerformed
        try{
        Date date = new Date();
        DateFormat formatoHora = new SimpleDateFormat("HH:mm");
        DateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
        PDFDocument pdf = new PDFDocument();
        PDFPage pagina = pdf.createPage(new PageFormat());
        Graphics2D graphics2D = pagina.createGraphics();
        graphics2D.drawString("Fecha: " + formatoFecha.format(date) + ",  Hora:" + formatoHora.format(date), 80, 100);
        BufferedImage image = ImageIO.read(new File("src\\img\\LogoUady.png"));
        graphics2D.setFont(new Font("Helvetica", Font.BOLD, 20));
        graphics2D.drawString("Calificaciones de los alumnos", 150, 130);
        graphics2D.drawImage(image, 250, 155, 110, 180, rootPane);
        graphics2D.setFont(new Font("Helvetica", Font.PLAIN, 12));
        graphics2D.drawString("Matricula, Nombre Completo, Calificación", 80, 360);
        int y = 360;
        for (int i = 0; i < listaAlumnos.size(); i++){
            y+=25;
            graphics2D.setColor(Color.darkGray);
            graphics2D.drawString((i+1)+". ",80, y);
            if(listaAlumnos.get(i).getCalif()==0)
                graphics2D.drawString(listaAlumnos.get(i).getMatricula() + ", " + listaAlumnos.get(i).getNombres() + " " +
                listaAlumnos.get(i).getApellidoPaterno() + " " + listaAlumnos.get(i).getApellidoMaterno() + ", " + "S/C",95,y);
            else
                graphics2D.drawString(listaAlumnos.get(i).getMatricula() + ", " + listaAlumnos.get(i).getNombres() + " " +
                listaAlumnos.get(i).getApellidoPaterno() + " " + listaAlumnos.get(i).getApellidoMaterno() + ", " + listaAlumnos.get(i).getCalif(),95,y);
        }
        pdf.addPage(pagina);
        pdf.saveDocument("calificaciones.pdf");
        JOptionPane.showMessageDialog(rootPane, "Se ha generado el PDF con las calificaciones");
        }catch(IOException e1){
            JOptionPane.showMessageDialog(rootPane, "Problemas con la creación del PDF");
        }
    }//GEN-LAST:event_btnPDFActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCSV;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnPDF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbFondo;
    private javax.swing.JTable tblCalifs;
    // End of variables declaration//GEN-END:variables
}
